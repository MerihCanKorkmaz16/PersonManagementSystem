@using System.Web.Mvc
@using PersonManagementSystem.Entities.Concrete
@using PersonManagementSystem.Entities.Concrete.ComplexType
@model PersonManagementSystem.MVC.WebUI.Models.PersonSettingsViewModel
@{
    ViewBag.Title = "EditPerson";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@if (TempData["merih"] != null)
{
    <div class="alert alert-success" style="text-align:center">
        @TempData["merih"].ToString()
    </div>
}
@if (TempData["Success"] != null)
{
<script type="text/javascript">
    Swal.fire(
         'Successful',
         '@TempData["Success"]',
         'success'
)
      
</script>
}

@Html.ValidationSummary(false, "")
<div class="alert alert-success" style="text-align:center">
    Log records of personnel additions are kept.
</div>
<div style="text-align:center">
    <button type="button" data-toggle="modal" data-target="#exampleModal" class="btn btn-primary">Add Person</button>
    @Html.ValidationMessageFor(model => model.Person.FirstName, "", new { @class = "text-danger" })
</div>
<br />
<div style="text-align:center;font-size:xx-large;font-family:'Open Sans'">Personel Details</div>
<hr style="border-color:coral" />
<table class="table">
    <thead>
        <tr>
            <th scope="col">PersonId</th>
            <th scope="col">Name</th>
            <th scope="col">Departmen</th>
            <th scope="col">RoleName</th>
            <th scope="col">Delete Person</th>
            <th scope="col">Update Person</th>
        </tr>
    </thead>
    <tbody>
        @foreach (PersonelDetails item in Model.Details)
        {

            <tr>
                <th scope="row">@item.PersonId</th>
                <td>@item.FirstName @item.LastName</td>
                <td>@item.DepartmentName</td>
                <td>@item.RoleName</td>
                <td><a href="~/PersonSettings/DeletePerson/?personıd=@item.PersonId" id="persondeleteBtn" class="btn btn-danger" onclick="return confirm(this)"><i class="fas fa-trash-alt"></i>  Delete</a></td>
                <td>
                    <a href="#" class="view"  data-target="/PersonSettings/PersonUpdateView/@item.PersonId">Update</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@using (Html.BeginForm("AddPerson", "PersonSettings", FormMethod.Post))
{
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add Person</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @Html.HiddenFor(m => m.Person.PersonId)
                <div class="modal-body">
                    <div class="form-group">
                        <label for="username" class="col-4 col-form-label">User Name</label>
                        @Html.TextBoxFor(m => m.Person.Username, new { @class = "form-control", @placeholder = "Username", @required = "required" , autocomplete = "off"})
                    </div>
                    <div class="form-group">
                        <label for="username" class="col-8 col-form-label">First Name</label>
                        <div class="col-12">
                            @Html.TextBoxFor(m => m.Person.FirstName, new { @class = "form-control", @placeholder = "First Name", @required = "required" , autocomplete = "off"})
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="username" class="col-8 col-form-label">Last Name</label>
                        <div class="col-12">
                            @Html.TextBoxFor(m => m.Person.LastName, new { @class = "form-control", @placeholder = "LastName", @required = "required", autocomplete = "off" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="username" class="col-8 col-form-label">E mail</label>
                        <div class="col-12">
                            @Html.TextBoxFor(m => m.Person.Email, new { @class = "form-control", @placeholder = "Email adress", @required = "required" , autocomplete = "off",@type="email"})
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="username" class="col-8 col-form-label">Password</label>
                        <div class="col-12">
                            @Html.TextBoxFor(m => m.Person.Password, new { @class = "form-control", @placeholder = "Password", @type = "password", @required = "required", autocomplete = "off" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="username" class="col-8 col-form-label">Person Rol</label>
                        <div class="col-12">
                            @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.Roles, "RoleId", "RoleName"), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="username" class="col-8 col-form-label">Person Departments</label>
                        <div class="col-12">
                            @Html.DropDownListFor(model => model.DepartmentId, new SelectList(Model.Departmens, "DepartmentId", "DepartmentName"), new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="addpersonBtn" class="btn btn-primary">Save changes</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

}

<div class="modal fade" id="modelView" tabindex="-1" role="dialog" aria-labelledby="modelViewLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Update Person</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">

            </div>



        </div>
    </div>
</div>

<script>
    function confirm(persondeleteBtn) {
        if (persondeleteBtn.dataset.confirmed) {
            // The action was already confirmed by the user, proceed with server event
            persondeleteBtn.dataset.confirmed = false;
            return true;
        }
        else {
            event.preventDefault();
            Swal.fire({
                title: 'Are you sure ?',
                text: "Person will be deleted",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm'
            }).then((result) => {
                if (result.value) {
                    persondeleteBtn.dataset.confirmed = true;
                    // Trigger button click programmatically
                    persondeleteBtn.click();
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'Deletion successful',
                        showConfirmButton: false,
                        timer: 4000
                    })
                }
            })
        }
    }
    $(function () {
        // a tagimizde bulunan .view classımıza click olduğunda
        $("body").on("click", ".view", function () {
            //data-target dan url mizi al
            var url = $(this).data("target");
            //bu urlimizi post et
            $.post(url, function (data) { })
                //eğer işlemimiz başarılı bir şekilde gerçekleşirse
                .done(function (data) {
                    //gelen datayı .modal-body mizin içerise html olarak ekle
                    $("#modelView .modal-body").html(data);
                    //sonra da modalimizi göster
                    $("#modelView").modal("show");
                })
                //eğer işlem başarısız olursa
                .fail(function () {
                    //modalımızın bodysine Error! yaz
                    $("#modelView .modal-body").text("Error!!");
                    //sonra da modalimizi göster
                    $("#modelView").modal("show");
                })

        });
    })

</script>


